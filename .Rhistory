path.functions <- paste(path, "functions/", sep = "")
path.data      <- paste(path, "data/", sep = "")
## functions
source("C:/rufibach/05_Depot/functions/deleteAux.r", echo = FALSE)
source(paste(path.functions, "prepTable.r", sep = ""), echo = FALSE)
source(paste(path.functions, "isValidEmail.r", sep = ""), echo = FALSE)
# open further files to be run
if (1 == 0){
openFile(fname = paste(path, "p02_block_bookings.r", sep = ""))
openFile(fname = paste(path, "p05_input_data.r", sep = ""))
openFile(fname = paste(path, "p07_prepare_data.r", sep = ""))
openFile(fname = paste(path, "p10_mapping.r", sep = ""))
openFile(fname = paste(path, "p20_changes_in_registration.r", sep = ""))
openFile(fname = paste(path, "p40_export_datasets.r", sep = ""))
openFile(fname = paste(path, "p30_emails.r", sep = ""))
}
# source input files
source(paste(path, "p05_input_data.r", sep = ""), echo = FALSE)
source(paste(path, "p07_prepare_data.r", sep = ""), echo = FALSE)
source(paste(path, "p10_mapping.r", sep = ""), echo = FALSE)
source(paste(path, "p30_emails.r", sep = ""), echo = FALSE)
source(paste(path, "p40_export_datasets.r", sep = ""), echo = FALSE)
# emails
email <- reg2$email
email <- email[is.na(email) == FALSE]
cat(paste(email, sep = "", collapse = ", "))
# contributors who have not registered yet
select(filter(reg2, contributor == 1 & is.na(timestamp)), first, last, email)
# --------------------------------------------------------------
# define paths, load packages, load functions
# --------------------------------------------------------------
packs <- c("readxl", "openxlsx", "dplyr", "rnaturalearth", "rnaturalearthdata",
"ggplot2", "RColorBrewer", "filesstrings", "reporttools", "PBSmodelling")
for (i in 1:length(packs)){library(packs[i], character.only = TRUE)}
# folder where you download registration DB to
path.from      <- "C:/Users/M335337/Downloads/"
# files for mapping
path.depot     <- "C:/rufibach/05_Depot/"
path.map       <- paste(path.depot, "mapping/", sep = "")
# code files and data
path0 <- "C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/"
path <- path0
path.functions <- paste(path, "functions/", sep = "")
path.data      <- paste(path, "data/", sep = "")
## functions
source("C:/rufibach/05_Depot/functions/deleteAux.r", echo = FALSE)
source(paste(path.functions, "prepTable.r", sep = ""), echo = FALSE)
source(paste(path.functions, "isValidEmail.r", sep = ""), echo = FALSE)
# open further files to be run
if (1 == 0){
openFile(fname = paste(path, "p02_block_bookings.r", sep = ""))
openFile(fname = paste(path, "p05_input_data.r", sep = ""))
openFile(fname = paste(path, "p07_prepare_data.r", sep = ""))
openFile(fname = paste(path, "p10_mapping.r", sep = ""))
openFile(fname = paste(path, "p20_changes_in_registration.r", sep = ""))
openFile(fname = paste(path, "p40_export_datasets.r", sep = ""))
openFile(fname = paste(path, "p30_emails.r", sep = ""))
}
# source input files
source(paste(path, "p05_input_data.r", sep = ""), echo = FALSE)
source(paste(path, "p07_prepare_data.r", sep = ""), echo = FALSE)
source(paste(path, "p10_mapping.r", sep = ""), echo = FALSE)
source(paste(path, "p30_emails.r", sep = ""), echo = FALSE)
source(paste(path, "p40_export_datasets.r", sep = ""), echo = FALSE)
# emails
email <- reg2$email
email <- email[is.na(email) == FALSE]
cat(paste(email, sep = "", collapse = ", "))
# contributors who have not registered yet
select(filter(reg2, contributor == 1), first, last, email)
# --------------------------------------------------------------
# define paths, load packages, load functions
# --------------------------------------------------------------
packs <- c("readxl", "openxlsx", "dplyr")
for (i in 1:length(packs)){library(packs[i], character.only = TRUE)}
# code files and data
path <- "C:/rufibach/22_Teaching/19_lectures/30_StatsBoost/90_attendance/"
# input
list <- as.data.frame(read_excel(paste(path, "mailinglist.xlsx", sep = ""), col_types = rep("text", 7)))
boost1 <- as.data.frame(read_excel(paste(path, "boost1.xlsx", sep = ""), col_types = rep("text", 7), skip = 9))
boost2 <- as.data.frame(read_excel(paste(path, "boost2.xlsx", sep = ""), col_types = rep("text", 7), skip = 9))
boost3 <- as.data.frame(read_excel(paste(path, "boost3.xlsx", sep = ""), col_types = rep("text", 7), skip = 9))
# merge email
email <- c(list[, 7],
select(boost1, "E-Mail")[, 1],
select(boost2, "E-Mail")[, 1],
select(boost3, "E-Mail")[, 1]
)
# post-process
email <- email[is.na(email) == FALSE]
email <- email[grepl("@", email, fixed = TRUE) == TRUE]
email <- sort(email)
# eliminate duplicates
email <- email[duplicated(email) == FALSE]
# copy and paste
cat(paste(email, sep = "", collapse = ", "))
boost1
boost1 <- as.data.frame(read_excel(paste(path, "boost1.xlsx", sep = ""), col_types = rep("text", 7), skip = 0))
dim(boost2)
# --------------------------------------------------------------
# define paths, load packages, load functions
# --------------------------------------------------------------
packs <- c("readxl", "openxlsx", "dplyr")
for (i in 1:length(packs)){library(packs[i], character.only = TRUE)}
# code files and data
path <- "C:/rufibach/22_Teaching/19_lectures/30_StatsBoost/90_attendance/"
# input
list <- as.data.frame(read_excel(paste(path, "mailinglist.xlsx", sep = ""), col_types = rep("text", 7)))
boost1 <- as.data.frame(read_excel(paste(path, "boost1.xlsx", sep = ""), col_types = rep("text", 7), skip = 9))
boost2 <- as.data.frame(read_excel(paste(path, "boost2.xlsx", sep = ""), col_types = rep("text", 7), skip = 9))
boost3 <- as.data.frame(read_excel(paste(path, "boost3.xlsx", sep = ""), col_types = rep("text", 7), skip = 9))
boost <- rbind(boost1, boost2, boost3)
boost
data.frame(read_excel(paste(path, "boost1.xlsx", sep = ""), col_types = rep("text", 7), skip = 9), boost = 1)
# --------------------------------------------------------------
# define paths, load packages, load functions
# --------------------------------------------------------------
packs <- c("readxl", "openxlsx", "dplyr")
for (i in 1:length(packs)){library(packs[i], character.only = TRUE)}
# code files and data
path <- "C:/rufibach/22_Teaching/19_lectures/30_StatsBoost/90_attendance/"
# input
list <- as.data.frame(read_excel(paste(path, "mailinglist.xlsx", sep = ""), col_types = rep("text", 7)))
boost1 <- data.frame(read_excel(paste(path, "boost1.xlsx", sep = ""), col_types = rep("text", 7), skip = 9), boost = 1)
boost2 <- data.frame(read_excel(paste(path, "boost2.xlsx", sep = ""), col_types = rep("text", 7), skip = 9), boost = 2)
boost3 <- data.frame(read_excel(paste(path, "boost3.xlsx", sep = ""), col_types = rep("text", 7), skip = 9), boost = 3)
boost <- rbind(boost1, boost2, boost3)
# merge email
email <- c(list[, 7], select(boost, "E-Mail")[, 1])
boost
# --------------------------------------------------------------
# define paths, load packages, load functions
# --------------------------------------------------------------
packs <- c("readxl", "openxlsx", "dplyr")
for (i in 1:length(packs)){library(packs[i], character.only = TRUE)}
# code files and data
path <- "C:/rufibach/22_Teaching/19_lectures/30_StatsBoost/90_attendance/"
# input
list <- as.data.frame(read_excel(paste(path, "mailinglist.xlsx", sep = ""), col_types = rep("text", 7)))
boost1 <- data.frame(read_excel(paste(path, "boost1.xlsx", sep = ""), col_types = rep("text", 7), skip = 9), boost = 1)
boost2 <- data.frame(read_excel(paste(path, "boost2.xlsx", sep = ""), col_types = rep("text", 7), skip = 9), boost = 2)
boost3 <- data.frame(read_excel(paste(path, "boost3.xlsx", sep = ""), col_types = rep("text", 7), skip = 9), boost = 3)
boost <- rbind(boost1, boost2, boost3)
boost
# --------------------------------------------------------------
# define paths, load packages, load functions
# --------------------------------------------------------------
packs <- c("readxl", "openxlsx", "dplyr")
for (i in 1:length(packs)){library(packs[i], character.only = TRUE)}
# code files and data
path <- "C:/rufibach/22_Teaching/19_lectures/30_StatsBoost/90_attendance/"
# input
list <- as.data.frame(read_excel(paste(path, "mailinglist.xlsx", sep = ""), col_types = rep("text", 7)))
boost1 <- data.frame(read_excel(paste(path, "boost1.xlsx", sep = ""), col_types = rep("text", 7), skip = 9), boost = 1)
boost2 <- data.frame(read_excel(paste(path, "boost2.xlsx", sep = ""), col_types = rep("text", 7), skip = 9), boost = 2)
boost3 <- data.frame(read_excel(paste(path, "boost3.xlsx", sep = ""), col_types = rep("text", 7), skip = 9), boost = 3)
boost <- rbind(boost1, boost2, boost3)
# merge email
email <- c(list[, 7], select(boost, "E.Mail")[, 1])
# post-process
email <- email[is.na(email) == FALSE]
email <- email[grepl("@", email, fixed = TRUE) == TRUE]
email <- sort(email)
# eliminate duplicates
email <- email[duplicated(email) == FALSE]
# copy and paste
cat(paste(email, sep = "", collapse = ", "))
# --------------------------------------------------------------
# define paths, load packages, load functions
# --------------------------------------------------------------
packs <- c("readxl", "openxlsx", "dplyr")
for (i in 1:length(packs)){library(packs[i], character.only = TRUE)}
# code files and data
path <- "C:/rufibach/22_Teaching/19_lectures/30_StatsBoost/90_attendance/"
# input
list <- as.data.frame(read_excel(paste(path, "mailinglist.xlsx", sep = ""), col_types = rep("text", 7)))
boost1 <- data.frame(read_excel(paste(path, "boost1.xlsx", sep = ""), col_types = rep("text", 7), skip = 9), boost = 1)
boost2 <- data.frame(read_excel(paste(path, "boost2.xlsx", sep = ""), col_types = rep("text", 7), skip = 9), boost = 2)
boost3 <- data.frame(read_excel(paste(path, "boost3.xlsx", sep = ""), col_types = rep("text", 7), skip = 9), boost = 3)
boost <- rbind(boost1, boost2, boost3)
# merge email
email <- c(list[, 7], select(boost, "E.Mail")[, 1])
# post-process
email <- email[is.na(email) == FALSE]
email <- email[grepl("@", email, fixed = TRUE) == TRUE]
email <- sort(email)
# eliminate duplicates
email <- email[duplicated(email) == FALSE]
# copy and paste
cat(paste(email, sep = "", collapse = ", "))
# number of participants per session
with(boost, table(boost))
# --------------------------------------------------------------
# load packages
# --------------------------------------------------------------
packs <- c("reporttools")
for (i in 1:length(packs)){library(packs[i], character.only = TRUE)}
# --------------------------------------------------------------
# define paths
# --------------------------------------------------------------
path0      <- "C:/rufibach/20_Research/30_talks/20250303_BIOS_Forum_adaptive/"
path       <- path0
path.slides  <- paste(path, "slides/", sep = "")
path.data    <- paste(path, "data/", sep = "")
path.code    <- paste(path, "code/", sep = "")
path.depot    <- "C:/rufibach/05_Depot/"
path.logo    <- paste(path.depot, "logo_roche/", sep = "")
# --------------------------------------------------------
# input functions
# --------------------------------------------------------
source("C:/rufibach/05_Depot/functions/deleteAux.r", echo = FALSE)
source(paste(path.code, "loadPack.r", sep = ''), echo = FALSE)
# --------------------------------------------------------------
# load data
# --------------------------------------------------------------
source(paste(path.code, "gallium.r", sep = ''), echo = FALSE)
source(paste(path.code, "gallium_interim.r", sep = ''), echo = FALSE)
# --------------------------------------------------------------
# define paths, load packages, load functions
# --------------------------------------------------------------
packs <- c("readxl", "openxlsx", "dplyr", "rnaturalearth", "rnaturalearthdata",
"ggplot2", "RColorBrewer", "filesstrings", "reporttools", "PBSmodelling")
for (i in 1:length(packs)){library(packs[i], character.only = TRUE)}
# folder where you download registration DB to
path.from      <- "C:/Users/M335337/Downloads/"
# files for mapping
path.depot     <- "C:/rufibach/05_Depot/"
path.map       <- paste(path.depot, "mapping/", sep = "")
# code files and data
path0 <- "C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/"
path <- path0
path.functions <- paste(path, "functions/", sep = "")
path.data      <- paste(path, "data/", sep = "")
## functions
source("C:/rufibach/05_Depot/functions/deleteAux.r", echo = FALSE)
source(paste(path.functions, "prepTable.r", sep = ""), echo = FALSE)
source(paste(path.functions, "isValidEmail.r", sep = ""), echo = FALSE)
# open further files to be run
if (1 == 0){
openFile(fname = paste(path, "p02_block_bookings.r", sep = ""))
openFile(fname = paste(path, "p05_input_data.r", sep = ""))
openFile(fname = paste(path, "p07_prepare_data.r", sep = ""))
openFile(fname = paste(path, "p10_mapping.r", sep = ""))
openFile(fname = paste(path, "p20_changes_in_registration.r", sep = ""))
openFile(fname = paste(path, "p40_export_datasets.r", sep = ""))
openFile(fname = paste(path, "p30_emails.r", sep = ""))
}
# source input files
source(paste(path, "p05_input_data.r", sep = ""), echo = FALSE)
source(paste(path, "p07_prepare_data.r", sep = ""), echo = FALSE)
source(paste(path, "p10_mapping.r", sep = ""), echo = FALSE)
source(paste(path, "p30_emails.r", sep = ""), echo = FALSE)
source(paste(path, "p40_export_datasets.r", sep = ""), echo = FALSE)
# emails
email <- reg2$email
email <- email[is.na(email) == FALSE]
cat(paste(email, sep = "", collapse = ", "))
# contributors who have not registered yet
select(filter(reg2, contributor == 1 & is.na(timestamp)), first, last, email)
# --------------------------------------------------------------
# define paths, load packages, load functions
# --------------------------------------------------------------
packs <- c("readxl", "openxlsx", "dplyr", "rnaturalearth", "rnaturalearthdata",
"ggplot2", "RColorBrewer", "filesstrings", "reporttools", "PBSmodelling")
for (i in 1:length(packs)){library(packs[i], character.only = TRUE)}
# folder where you download registration DB to
path.from      <- "C:/Users/M335337/Downloads/"
# files for mapping
path.depot     <- "C:/rufibach/05_Depot/"
path.map       <- paste(path.depot, "mapping/", sep = "")
# code files and data
path0 <- "C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/"
path <- path0
path.functions <- paste(path, "functions/", sep = "")
path.data      <- paste(path, "data/", sep = "")
## functions
source("C:/rufibach/05_Depot/functions/deleteAux.r", echo = FALSE)
source(paste(path.functions, "prepTable.r", sep = ""), echo = FALSE)
source(paste(path.functions, "isValidEmail.r", sep = ""), echo = FALSE)
# open further files to be run
if (1 == 0){
openFile(fname = paste(path, "p02_block_bookings.r", sep = ""))
openFile(fname = paste(path, "p05_input_data.r", sep = ""))
openFile(fname = paste(path, "p07_prepare_data.r", sep = ""))
openFile(fname = paste(path, "p10_mapping.r", sep = ""))
openFile(fname = paste(path, "p20_changes_in_registration.r", sep = ""))
openFile(fname = paste(path, "p40_export_datasets.r", sep = ""))
openFile(fname = paste(path, "p30_emails.r", sep = ""))
}
# source input files
source(paste(path, "p05_input_data.r", sep = ""), echo = FALSE)
source(paste(path, "p07_prepare_data.r", sep = ""), echo = FALSE)
source(paste(path, "p10_mapping.r", sep = ""), echo = FALSE)
source(paste(path, "p30_emails.r", sep = ""), echo = FALSE)
source(paste(path, "p40_export_datasets.r", sep = ""), echo = FALSE)
# emails
email <- reg2$email
email <- email[is.na(email) == FALSE]
cat(paste(email, sep = "", collapse = ", "))
# contributors who have not registered yet
select(filter(reg2, contributor == 1 & is.na(timestamp)), first, last, email)
50000/300
# --------------------------------------------------------------
# define paths, load packages, load functions
# --------------------------------------------------------------
packs <- c("readxl", "openxlsx", "dplyr", "rnaturalearth", "rnaturalearthdata",
"ggplot2", "RColorBrewer", "filesstrings", "reporttools", "PBSmodelling")
for (i in 1:length(packs)){library(packs[i], character.only = TRUE)}
# folder where you download registration DB to
path.from      <- "C:/Users/M335337/Downloads/"
# files for mapping
path.depot     <- "C:/rufibach/05_Depot/"
path.map       <- paste(path.depot, "mapping/", sep = "")
# code files and data
path0 <- "C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/"
path <- path0
path.functions <- paste(path, "functions/", sep = "")
path.data      <- paste(path, "data/", sep = "")
## functions
source("C:/rufibach/05_Depot/functions/deleteAux.r", echo = FALSE)
source(paste(path.functions, "prepTable.r", sep = ""), echo = FALSE)
source(paste(path.functions, "isValidEmail.r", sep = ""), echo = FALSE)
# open further files to be run
if (1 == 0){
openFile(fname = paste(path, "p02_block_bookings.r", sep = ""))
openFile(fname = paste(path, "p05_input_data.r", sep = ""))
openFile(fname = paste(path, "p07_prepare_data.r", sep = ""))
openFile(fname = paste(path, "p10_mapping.r", sep = ""))
openFile(fname = paste(path, "p20_changes_in_registration.r", sep = ""))
openFile(fname = paste(path, "p40_export_datasets.r", sep = ""))
openFile(fname = paste(path, "p30_emails.r", sep = ""))
}
# source input files
source(paste(path, "p05_input_data.r", sep = ""), echo = FALSE)
source(paste(path, "p07_prepare_data.r", sep = ""), echo = FALSE)
source(paste(path, "p10_mapping.r", sep = ""), echo = FALSE)
source(paste(path, "p30_emails.r", sep = ""), echo = FALSE)
source(paste(path, "p40_export_datasets.r", sep = ""), echo = FALSE)
# emails
email <- reg2$email
email <- email[is.na(email) == FALSE]
cat(paste(email, sep = "", collapse = ", "))
# contributors who have not registered yet
select(filter(reg2, contributor == 1 & is.na(timestamp)), first, last, email)
# --------------------------------------------------------------
# define paths, load packages, load functions
# --------------------------------------------------------------
packs <- c("readxl", "openxlsx", "dplyr", "rnaturalearth", "rnaturalearthdata",
"ggplot2", "RColorBrewer", "filesstrings", "reporttools", "PBSmodelling")
for (i in 1:length(packs)){library(packs[i], character.only = TRUE)}
# folder where you download registration DB to
path.from      <- "C:/Users/M335337/Downloads/"
# files for mapping
path.depot     <- "C:/rufibach/05_Depot/"
path.map       <- paste(path.depot, "mapping/", sep = "")
# code files and data
path0 <- "C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/"
path <- path0
path.functions <- paste(path, "functions/", sep = "")
path.data      <- paste(path, "data/", sep = "")
## functions
source("C:/rufibach/05_Depot/functions/deleteAux.r", echo = FALSE)
source(paste(path.functions, "prepTable.r", sep = ""), echo = FALSE)
source(paste(path.functions, "isValidEmail.r", sep = ""), echo = FALSE)
# open further files to be run
if (1 == 0){
openFile(fname = paste(path, "p02_block_bookings.r", sep = ""))
openFile(fname = paste(path, "p05_input_data.r", sep = ""))
openFile(fname = paste(path, "p07_prepare_data.r", sep = ""))
openFile(fname = paste(path, "p10_mapping.r", sep = ""))
openFile(fname = paste(path, "p20_changes_in_registration.r", sep = ""))
openFile(fname = paste(path, "p40_export_datasets.r", sep = ""))
openFile(fname = paste(path, "p30_emails.r", sep = ""))
}
# source input files
source(paste(path, "p05_input_data.r", sep = ""), echo = FALSE)
source(paste(path, "p07_prepare_data.r", sep = ""), echo = FALSE)
source(paste(path, "p10_mapping.r", sep = ""), echo = FALSE)
source(paste(path, "p30_emails.r", sep = ""), echo = FALSE)
source(paste(path, "p40_export_datasets.r", sep = ""), echo = FALSE)
# emails
email <- reg2$email
email <- email[is.na(email) == FALSE]
cat(paste(email, sep = "", collapse = ", "))
# contributors who have not registered yet
select(filter(reg2, contributor == 1 & is.na(timestamp)), first, last, email)
# --------------------------------------------------------------
# define paths, load packages, load functions
# --------------------------------------------------------------
packs <- c("readxl", "openxlsx", "dplyr", "rnaturalearth", "rnaturalearthdata",
"ggplot2", "RColorBrewer", "filesstrings", "reporttools", "PBSmodelling")
for (i in 1:length(packs)){library(packs[i], character.only = TRUE)}
# folder where you download registration DB to
path.from      <- "C:/Users/M335337/Downloads/"
# files for mapping
path.depot     <- "C:/rufibach/05_Depot/"
path.map       <- paste(path.depot, "mapping/", sep = "")
# code files and data
path0 <- "C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/"
path <- path0
path.functions <- paste(path, "functions/", sep = "")
path.data      <- paste(path, "data/", sep = "")
## functions
source("C:/rufibach/05_Depot/functions/deleteAux.r", echo = FALSE)
source(paste(path.functions, "prepTable.r", sep = ""), echo = FALSE)
source(paste(path.functions, "isValidEmail.r", sep = ""), echo = FALSE)
# open further files to be run
if (1 == 0){
openFile(fname = paste(path, "p02_block_bookings.r", sep = ""))
openFile(fname = paste(path, "p05_input_data.r", sep = ""))
openFile(fname = paste(path, "p07_prepare_data.r", sep = ""))
openFile(fname = paste(path, "p10_mapping.r", sep = ""))
openFile(fname = paste(path, "p20_changes_in_registration.r", sep = ""))
openFile(fname = paste(path, "p40_export_datasets.r", sep = ""))
openFile(fname = paste(path, "p30_emails.r", sep = ""))
}
# source input files
source(paste(path, "p05_input_data.r", sep = ""), echo = FALSE)
source(paste(path, "p07_prepare_data.r", sep = ""), echo = FALSE)
source(paste(path, "p10_mapping.r", sep = ""), echo = FALSE)
source(paste(path, "p30_emails.r", sep = ""), echo = FALSE)
source(paste(path, "p40_export_datasets.r", sep = ""), echo = FALSE)
# emails
email <- reg2$email
email <- email[is.na(email) == FALSE]
cat(paste(email, sep = "", collapse = ", "))
# contributors who have not registered yet
select(filter(reg2, contributor == 1 & is.na(timestamp)), first, last, email)
# --------------------------------------------------------------
# define paths, load packages, load functions
# --------------------------------------------------------------
packs <- c("readxl", "openxlsx", "dplyr", "rnaturalearth", "rnaturalearthdata",
"ggplot2", "RColorBrewer", "filesstrings", "reporttools", "PBSmodelling")
for (i in 1:length(packs)){library(packs[i], character.only = TRUE)}
# folder where you download registration DB to
path.from      <- "C:/Users/M335337/Downloads/"
# files for mapping
path.depot     <- "C:/rufibach/05_Depot/"
path.map       <- paste(path.depot, "mapping/", sep = "")
# code files and data
path0 <- "C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/"
path <- path0
path.functions <- paste(path, "functions/", sep = "")
path.data      <- paste(path, "data/", sep = "")
## functions
source("C:/rufibach/05_Depot/functions/deleteAux.r", echo = FALSE)
source(paste(path.functions, "prepTable.r", sep = ""), echo = FALSE)
source(paste(path.functions, "isValidEmail.r", sep = ""), echo = FALSE)
# open further files to be run
if (1 == 0){
openFile(fname = paste(path, "p02_block_bookings.r", sep = ""))
openFile(fname = paste(path, "p05_input_data.r", sep = ""))
openFile(fname = paste(path, "p07_prepare_data.r", sep = ""))
openFile(fname = paste(path, "p10_mapping.r", sep = ""))
openFile(fname = paste(path, "p20_changes_in_registration.r", sep = ""))
openFile(fname = paste(path, "p40_export_datasets.r", sep = ""))
openFile(fname = paste(path, "p30_emails.r", sep = ""))
}
# source input files
source(paste(path, "p05_input_data.r", sep = ""), echo = FALSE)
source(paste(path, "p07_prepare_data.r", sep = ""), echo = FALSE)
source(paste(path, "p10_mapping.r", sep = ""), echo = FALSE)
source(paste(path, "p30_emails.r", sep = ""), echo = FALSE)
source(paste(path, "p40_export_datasets.r", sep = ""), echo = FALSE)
# emails
email <- reg2$email
email <- email[is.na(email) == FALSE]
cat(paste(email, sep = "", collapse = ", "))
# contributors who have not registered yet
select(filter(reg2, contributor == 1 & is.na(timestamp)), first, last, email)
# --------------------------------------------------------------
# define paths, load packages, load functions
# --------------------------------------------------------------
packs <- c("readxl", "openxlsx", "dplyr", "rnaturalearth", "rnaturalearthdata",
"ggplot2", "RColorBrewer", "filesstrings", "reporttools", "PBSmodelling")
for (i in 1:length(packs)){library(packs[i], character.only = TRUE)}
# folder where you download registration DB to
path.from      <- "C:/Users/M335337/Downloads/"
# files for mapping
path.depot     <- "C:/rufibach/05_Depot/"
path.map       <- paste(path.depot, "mapping/", sep = "")
# code files and data
path0 <- "C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/"
path <- path0
path.functions <- paste(path, "functions/", sep = "")
path.data      <- paste(path, "data/", sep = "")
## functions
source("C:/rufibach/05_Depot/functions/deleteAux.r", echo = FALSE)
source(paste(path.functions, "prepTable.r", sep = ""), echo = FALSE)
source(paste(path.functions, "isValidEmail.r", sep = ""), echo = FALSE)
# open further files to be run
if (1 == 0){
openFile(fname = paste(path, "p02_block_bookings.r", sep = ""))
openFile(fname = paste(path, "p05_input_data.r", sep = ""))
openFile(fname = paste(path, "p07_prepare_data.r", sep = ""))
openFile(fname = paste(path, "p10_mapping.r", sep = ""))
openFile(fname = paste(path, "p20_changes_in_registration.r", sep = ""))
openFile(fname = paste(path, "p40_export_datasets.r", sep = ""))
openFile(fname = paste(path, "p30_emails.r", sep = ""))
}
# source input files
source(paste(path, "p05_input_data.r", sep = ""), echo = FALSE)
source(paste(path, "p07_prepare_data.r", sep = ""), echo = FALSE)
source(paste(path, "p10_mapping.r", sep = ""), echo = FALSE)
source(paste(path, "p30_emails.r", sep = ""), echo = FALSE)
source(paste(path, "p40_export_datasets.r", sep = ""), echo = FALSE)
# emails
email <- reg2$email
email <- email[is.na(email) == FALSE]
cat(paste(email, sep = "", collapse = ", "))
# contributors who have not registered yet
select(filter(reg2, contributor == 1 & is.na(timestamp)), first, last, email)
