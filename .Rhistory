reg$inst[ind_other] <- reg$inst_other[ind_other]
reg <- (reg %>% select(-inst_other))
# map institution names
map_inst <- as.data.frame(read_excel(paste(path.map, "map_inst.xlsx", sep = ""),
col_types = rep("text", 2)))
# merge with mapping
reg <- merge(reg, map_inst, by = "inst", all.x = TRUE, sort = FALSE)
# ------------------------------------------
# generate country column
# ------------------------------------------
# if entry != other delete what has been entered for "other"
ind_other <- (reg$country != "Other (please specify below)" & is.na(reg$country_other) == FALSE)
reg$country_other[ind_other] <- NA
# remove entries of "Other"
ind_other <- (reg$country == "Other (please specify below)")
reg$country[ind_other] <- reg$country_other[ind_other]
# map countries names
map_country <- as.data.frame(read_excel(paste(path.map, "map_country.xlsx", sep = ""),
col_types = rep("text", 2)))
# merge with mapping
reg <- merge(reg, map_country, by = "country", all.x = TRUE, sort = FALSE)
# generate full dataset
reg2 <- data.frame(reg[, c("timestamp", "first", "last", "email", "question", "type",
"background", "inst", "inst2", "country", "country2")])
# type of institution
with(reg2, table(type, useNA = "always"))
# total registered
nrow(reg2)
# ------------------------------------------
# unmapped entries?
# ------------------------------------------
reg2[is.na(select(reg2, "inst2")), ]
data.frame(reg2[is.na(select(reg2, "inst2")), "inst"])
reg2[is.na(select(reg2, "country2")), ]
data.frame(reg2[is.na(select(reg2, "country2")), "country"])
# ====================================================
# sort by registrations timepoint
# ====================================================
reg2 <- reg2 %>% arrange(timestamp)
# merge with roster
reg2 <- merge(reg2, roster, by = c("first", "last"), all = TRUE)
reg2
# --------------------------------------------------------------
# define paths, load packages, load functions
# --------------------------------------------------------------
packs <- c("readxl", "openxlsx", "dplyr", "rnaturalearth", "rnaturalearthdata",
"ggplot2", "RColorBrewer", "filesstrings", "reporttools", "PBSmodelling")
for (i in 1:length(packs)){library(packs[i], character.only = TRUE)}
# folder where you download registration DB to
path.from      <- "C:/Users/M335337/Downloads/"
# files for mapping
path.depot     <- "C:/rufibach/05_Depot/"
path.map       <- paste(path.depot, "mapping/", sep = "")
# code files and data
path0 <- "C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/"
path <- path0
path.functions <- paste(path, "functions/", sep = "")
path.data      <- paste(path, "data/", sep = "")
## functions
source("C:/rufibach/05_Depot/functions/deleteAux.r", echo = FALSE)
source(paste(path.functions, "prepTable.r", sep = ""), echo = FALSE)
source(paste(path.functions, "isValidEmail.r", sep = ""), echo = FALSE)
# open further files to be run
if (1 == 0){
openFile(fname = paste(path, "p02_block_bookings.r", sep = ""))
openFile(fname = paste(path, "p05_input_data.r", sep = ""))
openFile(fname = paste(path, "p07_prepare_data.r", sep = ""))
openFile(fname = paste(path, "p10_mapping.r", sep = ""))
openFile(fname = paste(path, "p20_changes_in_registration.r", sep = ""))
openFile(fname = paste(path, "p40_export_datasets.r", sep = ""))
}
openFile(fname = paste(path, "p30_emails.r", sep = ""))
# source input files
source(paste(path, "p05_input_data.r", sep = ""), echo = FALSE)
source(paste(path, "p07_prepare_data.r", sep = ""), echo = FALSE)
source(paste(path, "p10_mapping.r", sep = ""), echo = FALSE)
source(paste(path, "p30_emails.r", sep = ""), echo = FALSE)
source(paste(path, "p40_export_datasets.r", sep = ""), echo = FALSE)
# --------------------------------------------------------------
# define paths, load packages, load functions
# --------------------------------------------------------------
packs <- c("readxl", "openxlsx", "dplyr", "rnaturalearth", "rnaturalearthdata",
"ggplot2", "RColorBrewer", "filesstrings", "reporttools", "PBSmodelling")
for (i in 1:length(packs)){library(packs[i], character.only = TRUE)}
# folder where you download registration DB to
path.from      <- "C:/Users/M335337/Downloads/"
# files for mapping
path.depot     <- "C:/rufibach/05_Depot/"
path.map       <- paste(path.depot, "mapping/", sep = "")
# code files and data
path0 <- "C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/"
path <- path0
path.functions <- paste(path, "functions/", sep = "")
path.data      <- paste(path, "data/", sep = "")
## functions
source("C:/rufibach/05_Depot/functions/deleteAux.r", echo = FALSE)
source(paste(path.functions, "prepTable.r", sep = ""), echo = FALSE)
source(paste(path.functions, "isValidEmail.r", sep = ""), echo = FALSE)
# open further files to be run
if (1 == 0){
openFile(fname = paste(path, "p02_block_bookings.r", sep = ""))
openFile(fname = paste(path, "p05_input_data.r", sep = ""))
openFile(fname = paste(path, "p07_prepare_data.r", sep = ""))
openFile(fname = paste(path, "p10_mapping.r", sep = ""))
openFile(fname = paste(path, "p20_changes_in_registration.r", sep = ""))
openFile(fname = paste(path, "p40_export_datasets.r", sep = ""))
}
openFile(fname = paste(path, "p30_emails.r", sep = ""))
# source input files
source(paste(path, "p05_input_data.r", sep = ""), echo = FALSE)
source(paste(path, "p07_prepare_data.r", sep = ""), echo = FALSE)
source(paste(path, "p10_mapping.r", sep = ""), echo = FALSE)
source(paste(path, "p30_emails.r", sep = ""), echo = FALSE)
source(paste(path, "p40_export_datasets.r", sep = ""), echo = FALSE)
# ====================================================
# newly registered participants
# ====================================================
write.table(paste(newmails[is.na(newmails) == FALSE], collapse = ", "), file = paste(path.data, "emails.txt", sep = ""))
write.csv(tail(newmails, 1), file = paste(path.data, "last.csv", sep = ""))
# shorten reg2 to relevant columns
reg2short <- reg2 %>% select(first, last, email, inst2, background, type, country2) %>% arrange(last, first)
head(reg2)
# --------------------------------------------------------------
# define paths, load packages, load functions
# --------------------------------------------------------------
packs <- c("readxl", "openxlsx", "dplyr", "rnaturalearth", "rnaturalearthdata",
"ggplot2", "RColorBrewer", "filesstrings", "reporttools", "PBSmodelling")
for (i in 1:length(packs)){library(packs[i], character.only = TRUE)}
# folder where you download registration DB to
path.from      <- "C:/Users/M335337/Downloads/"
# files for mapping
path.depot     <- "C:/rufibach/05_Depot/"
path.map       <- paste(path.depot, "mapping/", sep = "")
# code files and data
path0 <- "C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/"
path <- path0
path.functions <- paste(path, "functions/", sep = "")
path.data      <- paste(path, "data/", sep = "")
## functions
source("C:/rufibach/05_Depot/functions/deleteAux.r", echo = FALSE)
source(paste(path.functions, "prepTable.r", sep = ""), echo = FALSE)
source(paste(path.functions, "isValidEmail.r", sep = ""), echo = FALSE)
# open further files to be run
if (1 == 0){
openFile(fname = paste(path, "p02_block_bookings.r", sep = ""))
openFile(fname = paste(path, "p05_input_data.r", sep = ""))
openFile(fname = paste(path, "p07_prepare_data.r", sep = ""))
openFile(fname = paste(path, "p10_mapping.r", sep = ""))
openFile(fname = paste(path, "p20_changes_in_registration.r", sep = ""))
openFile(fname = paste(path, "p40_export_datasets.r", sep = ""))
}
openFile(fname = paste(path, "p30_emails.r", sep = ""))
# source input files
source(paste(path, "p05_input_data.r", sep = ""), echo = FALSE)
# --------------------------------------------------------------
# define paths, load packages, load functions
# --------------------------------------------------------------
packs <- c("readxl", "openxlsx", "dplyr", "rnaturalearth", "rnaturalearthdata",
"ggplot2", "RColorBrewer", "filesstrings", "reporttools", "PBSmodelling")
for (i in 1:length(packs)){library(packs[i], character.only = TRUE)}
# folder where you download registration DB to
path.from      <- "C:/Users/M335337/Downloads/"
# files for mapping
path.depot     <- "C:/rufibach/05_Depot/"
path.map       <- paste(path.depot, "mapping/", sep = "")
# code files and data
path0 <- "C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/"
path <- path0
path.functions <- paste(path, "functions/", sep = "")
path.data      <- paste(path, "data/", sep = "")
## functions
source("C:/rufibach/05_Depot/functions/deleteAux.r", echo = FALSE)
source(paste(path.functions, "prepTable.r", sep = ""), echo = FALSE)
source(paste(path.functions, "isValidEmail.r", sep = ""), echo = FALSE)
# open further files to be run
if (1 == 0){
openFile(fname = paste(path, "p02_block_bookings.r", sep = ""))
openFile(fname = paste(path, "p05_input_data.r", sep = ""))
openFile(fname = paste(path, "p07_prepare_data.r", sep = ""))
openFile(fname = paste(path, "p10_mapping.r", sep = ""))
openFile(fname = paste(path, "p20_changes_in_registration.r", sep = ""))
openFile(fname = paste(path, "p40_export_datasets.r", sep = ""))
}
openFile(fname = paste(path, "p30_emails.r", sep = ""))
# source input files
source(paste(path, "p05_input_data.r", sep = ""), echo = FALSE)
source(paste(path, "p07_prepare_data.r", sep = ""), echo = FALSE)
source(paste(path, "p10_mapping.r", sep = ""), echo = FALSE)
source(paste(path, "p30_emails.r", sep = ""), echo = FALSE)
source(paste(path, "p40_export_datasets.r", sep = ""), echo = FALSE)
# emails
email <- reg2$email
email <- email[is.na(email) == FALSE]
cat(paste(email, sep = "", collapse = ", "))
# contributors who have not registered yet
select(filter(reg2, contributor == 1 & is.na(timestamp)), first, last)
# --------------------------------------------------------------
# define paths, load packages, load functions
# --------------------------------------------------------------
packs <- c("readxl", "openxlsx", "dplyr", "rnaturalearth", "rnaturalearthdata",
"ggplot2", "RColorBrewer", "filesstrings", "reporttools", "PBSmodelling")
for (i in 1:length(packs)){library(packs[i], character.only = TRUE)}
# folder where you download registration DB to
path.from      <- "C:/Users/M335337/Downloads/"
# files for mapping
path.depot     <- "C:/rufibach/05_Depot/"
path.map       <- paste(path.depot, "mapping/", sep = "")
# code files and data
path0 <- "C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/"
path <- path0
path.functions <- paste(path, "functions/", sep = "")
path.data      <- paste(path, "data/", sep = "")
## functions
source("C:/rufibach/05_Depot/functions/deleteAux.r", echo = FALSE)
source(paste(path.functions, "prepTable.r", sep = ""), echo = FALSE)
source(paste(path.functions, "isValidEmail.r", sep = ""), echo = FALSE)
# open further files to be run
if (1 == 0){
openFile(fname = paste(path, "p02_block_bookings.r", sep = ""))
openFile(fname = paste(path, "p05_input_data.r", sep = ""))
openFile(fname = paste(path, "p07_prepare_data.r", sep = ""))
openFile(fname = paste(path, "p10_mapping.r", sep = ""))
openFile(fname = paste(path, "p20_changes_in_registration.r", sep = ""))
openFile(fname = paste(path, "p40_export_datasets.r", sep = ""))
}
openFile(fname = paste(path, "p30_emails.r", sep = ""))
# source input files
source(paste(path, "p05_input_data.r", sep = ""), echo = FALSE)
source(paste(path, "p07_prepare_data.r", sep = ""), echo = FALSE)
source(paste(path, "p10_mapping.r", sep = ""), echo = FALSE)
source(paste(path, "p30_emails.r", sep = ""), echo = FALSE)
source(paste(path, "p40_export_datasets.r", sep = ""), echo = FALSE)
# emails
email <- reg2$email
email <- email[is.na(email) == FALSE]
cat(paste(email, sep = "", collapse = ", "))
# contributors who have not registered yet
select(filter(reg2, contributor == 1 & is.na(timestamp)), first, last)
# --------------------------------------------------------------
# define paths, load packages, load functions
# --------------------------------------------------------------
packs <- c("readxl", "openxlsx", "dplyr", "rnaturalearth", "rnaturalearthdata",
"ggplot2", "RColorBrewer", "filesstrings", "reporttools", "PBSmodelling")
for (i in 1:length(packs)){library(packs[i], character.only = TRUE)}
# folder where you download registration DB to
path.from      <- "C:/Users/M335337/Downloads/"
# files for mapping
path.depot     <- "C:/rufibach/05_Depot/"
path.map       <- paste(path.depot, "mapping/", sep = "")
# code files and data
path0 <- "C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/"
path <- path0
path.functions <- paste(path, "functions/", sep = "")
path.data      <- paste(path, "data/", sep = "")
## functions
source("C:/rufibach/05_Depot/functions/deleteAux.r", echo = FALSE)
source(paste(path.functions, "prepTable.r", sep = ""), echo = FALSE)
source(paste(path.functions, "isValidEmail.r", sep = ""), echo = FALSE)
# open further files to be run
if (1 == 0){
openFile(fname = paste(path, "p02_block_bookings.r", sep = ""))
openFile(fname = paste(path, "p05_input_data.r", sep = ""))
openFile(fname = paste(path, "p07_prepare_data.r", sep = ""))
openFile(fname = paste(path, "p10_mapping.r", sep = ""))
openFile(fname = paste(path, "p20_changes_in_registration.r", sep = ""))
openFile(fname = paste(path, "p40_export_datasets.r", sep = ""))
}
openFile(fname = paste(path, "p30_emails.r", sep = ""))
# source input files
source(paste(path, "p05_input_data.r", sep = ""), echo = FALSE)
source(paste(path, "p07_prepare_data.r", sep = ""), echo = FALSE)
source(paste(path, "p10_mapping.r", sep = ""), echo = FALSE)
source(paste(path, "p30_emails.r", sep = ""), echo = FALSE)
source(paste(path, "p40_export_datasets.r", sep = ""), echo = FALSE)
# emails
email <- reg2$email
email <- email[is.na(email) == FALSE]
cat(paste(email, sep = "", collapse = ", "))
# contributors who have not registered yet
select(filter(reg2, contributor == 1 & is.na(timestamp)), first, last)
# --------------------------------------------------------------
# define paths, load packages, load functions
# --------------------------------------------------------------
packs <- c("readxl", "openxlsx", "dplyr", "rnaturalearth", "rnaturalearthdata",
"ggplot2", "RColorBrewer", "filesstrings", "reporttools", "PBSmodelling")
for (i in 1:length(packs)){library(packs[i], character.only = TRUE)}
# folder where you download registration DB to
path.from      <- "C:/Users/M335337/Downloads/"
# files for mapping
path.depot     <- "C:/rufibach/05_Depot/"
path.map       <- paste(path.depot, "mapping/", sep = "")
# code files and data
path0 <- "C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/"
path <- path0
path.functions <- paste(path, "functions/", sep = "")
path.data      <- paste(path, "data/", sep = "")
## functions
source("C:/rufibach/05_Depot/functions/deleteAux.r", echo = FALSE)
source(paste(path.functions, "prepTable.r", sep = ""), echo = FALSE)
source(paste(path.functions, "isValidEmail.r", sep = ""), echo = FALSE)
# open further files to be run
if (1 == 0){
openFile(fname = paste(path, "p02_block_bookings.r", sep = ""))
openFile(fname = paste(path, "p05_input_data.r", sep = ""))
openFile(fname = paste(path, "p07_prepare_data.r", sep = ""))
openFile(fname = paste(path, "p10_mapping.r", sep = ""))
openFile(fname = paste(path, "p20_changes_in_registration.r", sep = ""))
openFile(fname = paste(path, "p40_export_datasets.r", sep = ""))
}
openFile(fname = paste(path, "p30_emails.r", sep = ""))
# source input files
source(paste(path, "p05_input_data.r", sep = ""), echo = FALSE)
source(paste(path, "p07_prepare_data.r", sep = ""), echo = FALSE)
source(paste(path, "p10_mapping.r", sep = ""), echo = FALSE)
source(paste(path, "p30_emails.r", sep = ""), echo = FALSE)
source(paste(path, "p40_export_datasets.r", sep = ""), echo = FALSE)
# emails
email <- reg2$email
email <- email[is.na(email) == FALSE]
cat(paste(email, sep = "", collapse = ", "))
# contributors who have not registered yet
select(filter(reg2, contributor == 1 & is.na(timestamp)), first, last)
# --------------------------------------------------------------
# define paths, load packages, load functions
# --------------------------------------------------------------
packs <- c("readxl", "openxlsx", "dplyr", "rnaturalearth", "rnaturalearthdata",
"ggplot2", "RColorBrewer", "filesstrings", "reporttools", "PBSmodelling")
for (i in 1:length(packs)){library(packs[i], character.only = TRUE)}
# folder where you download registration DB to
path.from      <- "C:/Users/M335337/Downloads/"
# files for mapping
path.depot     <- "C:/rufibach/05_Depot/"
path.map       <- paste(path.depot, "mapping/", sep = "")
# code files and data
path0 <- "C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/"
path <- path0
path.functions <- paste(path, "functions/", sep = "")
path.data      <- paste(path, "data/", sep = "")
## functions
source("C:/rufibach/05_Depot/functions/deleteAux.r", echo = FALSE)
source(paste(path.functions, "prepTable.r", sep = ""), echo = FALSE)
source(paste(path.functions, "isValidEmail.r", sep = ""), echo = FALSE)
# open further files to be run
if (1 == 0){
openFile(fname = paste(path, "p02_block_bookings.r", sep = ""))
openFile(fname = paste(path, "p05_input_data.r", sep = ""))
openFile(fname = paste(path, "p07_prepare_data.r", sep = ""))
openFile(fname = paste(path, "p10_mapping.r", sep = ""))
openFile(fname = paste(path, "p20_changes_in_registration.r", sep = ""))
openFile(fname = paste(path, "p40_export_datasets.r", sep = ""))
}
openFile(fname = paste(path, "p30_emails.r", sep = ""))
# source input files
source(paste(path, "p05_input_data.r", sep = ""), echo = FALSE)
source(paste(path, "p07_prepare_data.r", sep = ""), echo = FALSE)
source(paste(path, "p10_mapping.r", sep = ""), echo = FALSE)
source(paste(path, "p30_emails.r", sep = ""), echo = FALSE)
source(paste(path, "p40_export_datasets.r", sep = ""), echo = FALSE)
# emails
email <- reg2$email
email <- email[is.na(email) == FALSE]
cat(paste(email, sep = "", collapse = ", "))
# contributors who have not registered yet
select(filter(reg2, contributor == 1 & is.na(timestamp)), first, last)
# --------------------------------------------------------------
# define paths, load packages, load functions
# --------------------------------------------------------------
packs <- c("readxl", "openxlsx", "dplyr", "rnaturalearth", "rnaturalearthdata",
"ggplot2", "RColorBrewer", "filesstrings", "reporttools", "PBSmodelling")
for (i in 1:length(packs)){library(packs[i], character.only = TRUE)}
# folder where you download registration DB to
path.from      <- "C:/Users/M335337/Downloads/"
# files for mapping
path.depot     <- "C:/rufibach/05_Depot/"
path.map       <- paste(path.depot, "mapping/", sep = "")
# code files and data
path0 <- "C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/"
path <- path0
path.functions <- paste(path, "functions/", sep = "")
path.data      <- paste(path, "data/", sep = "")
## functions
source("C:/rufibach/05_Depot/functions/deleteAux.r", echo = FALSE)
source(paste(path.functions, "prepTable.r", sep = ""), echo = FALSE)
source(paste(path.functions, "isValidEmail.r", sep = ""), echo = FALSE)
# open further files to be run
if (1 == 0){
openFile(fname = paste(path, "p02_block_bookings.r", sep = ""))
openFile(fname = paste(path, "p05_input_data.r", sep = ""))
openFile(fname = paste(path, "p07_prepare_data.r", sep = ""))
openFile(fname = paste(path, "p10_mapping.r", sep = ""))
openFile(fname = paste(path, "p20_changes_in_registration.r", sep = ""))
openFile(fname = paste(path, "p40_export_datasets.r", sep = ""))
}
openFile(fname = paste(path, "p30_emails.r", sep = ""))
# source input files
source(paste(path, "p05_input_data.r", sep = ""), echo = FALSE)
source(paste(path, "p07_prepare_data.r", sep = ""), echo = FALSE)
source(paste(path, "p10_mapping.r", sep = ""), echo = FALSE)
source(paste(path, "p30_emails.r", sep = ""), echo = FALSE)
source(paste(path, "p40_export_datasets.r", sep = ""), echo = FALSE)
# emails
email <- reg2$email
email <- email[is.na(email) == FALSE]
cat(paste(email, sep = "", collapse = ", "))
# contributors who have not registered yet
select(filter(reg2, contributor == 1 & is.na(timestamp)), first, last)
# --------------------------------------------------------------
# define paths, load packages, load functions
# --------------------------------------------------------------
packs <- c("readxl", "openxlsx", "dplyr", "rnaturalearth", "rnaturalearthdata",
"ggplot2", "RColorBrewer", "filesstrings", "reporttools", "PBSmodelling")
for (i in 1:length(packs)){library(packs[i], character.only = TRUE)}
# folder where you download registration DB to
path.from      <- "C:/Users/M335337/Downloads/"
# files for mapping
path.depot     <- "C:/rufibach/05_Depot/"
path.map       <- paste(path.depot, "mapping/", sep = "")
# code files and data
path0 <- "C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/"
path <- path0
path.functions <- paste(path, "functions/", sep = "")
path.data      <- paste(path, "data/", sep = "")
## functions
source("C:/rufibach/05_Depot/functions/deleteAux.r", echo = FALSE)
source(paste(path.functions, "prepTable.r", sep = ""), echo = FALSE)
source(paste(path.functions, "isValidEmail.r", sep = ""), echo = FALSE)
# open further files to be run
if (1 == 0){
openFile(fname = paste(path, "p02_block_bookings.r", sep = ""))
openFile(fname = paste(path, "p05_input_data.r", sep = ""))
openFile(fname = paste(path, "p07_prepare_data.r", sep = ""))
openFile(fname = paste(path, "p10_mapping.r", sep = ""))
openFile(fname = paste(path, "p20_changes_in_registration.r", sep = ""))
openFile(fname = paste(path, "p40_export_datasets.r", sep = ""))
}
openFile(fname = paste(path, "p30_emails.r", sep = ""))
# source input files
source(paste(path, "p05_input_data.r", sep = ""), echo = FALSE)
source(paste(path, "p07_prepare_data.r", sep = ""), echo = FALSE)
source(paste(path, "p10_mapping.r", sep = ""), echo = FALSE)
source(paste(path, "p30_emails.r", sep = ""), echo = FALSE)
source(paste(path, "p40_export_datasets.r", sep = ""), echo = FALSE)
# emails
email <- reg2$email
email <- email[is.na(email) == FALSE]
cat(paste(email, sep = "", collapse = ", "))
# contributors who have not registered yet
select(filter(reg2, contributor == 1 & is.na(timestamp)), first, last)
# ====================================================
# all email addresses for copy and paste into calendar invite
# ====================================================
#last <- read.csv(file = paste(path.data, "last.csv", sep = ""))[1, 2]
last <- "armand.chouzy@bms.com"
last_update <- which(reg2$email == last)
last_update <- 1
newmails <- reg2$email[last_update:nrow(reg2)]
newmails2 <- paste(newmails, collapse = ", ")
newmails2
# ====================================================
# check emails
# ====================================================
table(isValidEmail(newmails))
# ====================================================
# find spaces and emails with missing @
# ====================================================
newmails[isValidEmail(newmails) == TRUE]
# ====================================================
# manually check
# ====================================================
newmails
# --------------------------------------------------------------
# define paths, load packages, load functions
# --------------------------------------------------------------
packs <- c("readxl", "openxlsx", "dplyr", "rnaturalearth", "rnaturalearthdata",
"ggplot2", "RColorBrewer", "filesstrings", "reporttools", "PBSmodelling")
for (i in 1:length(packs)){library(packs[i], character.only = TRUE)}
# folder where you download registration DB to
path.from      <- "C:/Users/M335337/Downloads/"
# files for mapping
path.depot     <- "C:/rufibach/05_Depot/"
path.map       <- paste(path.depot, "mapping/", sep = "")
# code files and data
path0 <- "C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/"
path <- path0
path.functions <- paste(path, "functions/", sep = "")
path.data      <- paste(path, "data/", sep = "")
## functions
source("C:/rufibach/05_Depot/functions/deleteAux.r", echo = FALSE)
source(paste(path.functions, "prepTable.r", sep = ""), echo = FALSE)
source(paste(path.functions, "isValidEmail.r", sep = ""), echo = FALSE)
# open further files to be run
if (1 == 0){
openFile(fname = paste(path, "p02_block_bookings.r", sep = ""))
openFile(fname = paste(path, "p05_input_data.r", sep = ""))
openFile(fname = paste(path, "p07_prepare_data.r", sep = ""))
openFile(fname = paste(path, "p10_mapping.r", sep = ""))
openFile(fname = paste(path, "p20_changes_in_registration.r", sep = ""))
openFile(fname = paste(path, "p40_export_datasets.r", sep = ""))
openFile(fname = paste(path, "p30_emails.r", sep = ""))
}
# source input files
source(paste(path, "p05_input_data.r", sep = ""), echo = FALSE)
source(paste(path, "p07_prepare_data.r", sep = ""), echo = FALSE)
source(paste(path, "p10_mapping.r", sep = ""), echo = FALSE)
source(paste(path, "p30_emails.r", sep = ""), echo = FALSE)
source(paste(path, "p40_export_datasets.r", sep = ""), echo = FALSE)
# emails
email <- reg2$email
email <- email[is.na(email) == FALSE]
cat(paste(email, sep = "", collapse = ", "))
# contributors who have not registered yet
select(filter(reg2, contributor == 1 & is.na(timestamp)), first, last)
