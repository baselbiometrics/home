upcoming$Registration <- ifelse(is.na(select(upcoming, registration)[, 1]), "",
paste("[Registration](", select(upcoming, registration)[, 1], ")", sep = ""))
upcoming$Agenda <- paste("[Agenda](upcoming/", rdate, "/agenda.pdf)", sep = "")
upcoming[upcoming$date == "20.02.2025", "Registration"] <- "[Registration for mentors](https://docs.google.com/forms/d/e/1FAIpQLSeNESs9AJKrUXmLBv_wiiHKjWJHWEJ2nq89ZiS3SPLfy4JMfw/viewform)<br><br>Registration for mentees to follow"
upcoming[is.na(upcoming)] <- ""
upcoming <- select(upcoming, date, event, type, Agenda, Registration, comment) %>% rename("Date" = date, "Event" = event, "Type of event" = type,
"Comment" = comment)
}
upcoming
# prepare date strings
dates <- unique(select(upcoming, date))[, 1]
packs.html <- c("knitr", "pander", "dplyr", "readxl")
for (i in 1:length(packs.html)){library(packs.html[i], character.only = TRUE)}
knitr::opts_chunk$set(echo = TRUE)
## upcoming
path <- getwd()
upcoming <- as.data.frame(read_excel(paste(path, "/data/upcoming.xlsx", sep = ""), col_types = NULL))
# prepare date strings
dates <- unique(select(upcoming, date))[, 1]
d <- substr(dates, 1, 2)
m <- substr(dates, 4, 5)
y <- substr(dates, 7, 11)
rdate <- paste(y, m, d, sep = "")
upcoming$Registration <- ifelse(is.na(select(upcoming, registration)[, 1]), "",
paste("[Registration](", select(upcoming, registration)[, 1], ")", sep = ""))
rdate
upcoming
file.exists(paste("upcoming/", rdate, "/agenda.pdf", sep = ""))
## load packages
packs.html <- c("knitr", "pander", "dplyr", "readxl")
for (i in 1:length(packs.html)){library(packs.html[i], character.only = TRUE)}
knitr::opts_chunk$set(echo = TRUE)
## upcoming
path <- getwd()
upcoming <- as.data.frame(read_excel(paste(path, "/data/upcoming.xlsx", sep = ""), col_types = NULL))
if (nrow(upcoming) > 0){
# prepare date strings
dates <- unique(select(upcoming, date))[, 1]
d <- substr(dates, 1, 2)
m <- substr(dates, 4, 5)
y <- substr(dates, 7, 11)
rdate <- paste(y, m, d, sep = "")
upcoming$Registration <- ifelse(is.na(select(upcoming, registration)[, 1]), "",
paste("[Registration](", select(upcoming, registration)[, 1], ")", sep = ""))
ag <- file.exists(paste("upcoming/", rdate, "/agenda.pdf", sep = ""))
upcoming$Agenda <- ifelse(ag, paste("[Agenda](upcoming/", rdate, "/agenda.pdf)", sep = ""), "")
upcoming[upcoming$date == "20.02.2025", "Registration"] <- "[Registration for mentors](https://docs.google.com/forms/d/e/1FAIpQLSeNESs9AJKrUXmLBv_wiiHKjWJHWEJ2nq89ZiS3SPLfy4JMfw/viewform)<br><br>Registration for mentees to follow"
upcoming[is.na(upcoming)] <- ""
upcoming <- select(upcoming, date, event, type, Agenda, Registration, comment) %>% rename("Date" = date, "Event" = event, "Type of event" = type,
"Comment" = comment)
}
upcoming
## load packages
packs.html <- c("knitr", "pander", "reporttools", "dplyr", "readxl", "countrycode")
for (i in 1:length(packs.html)){library(packs.html[i], character.only = TRUE)}
knitr::opts_chunk$set(echo = TRUE)
source(paste("C:/rufibach/70_Service/BBS/events/20250319_innovation/p00_initialize.r", sep = ""))
## load packages
packs.html <- c("knitr", "pander", "reporttools", "dplyr", "readxl", "countrycode")
for (i in 1:length(packs.html)){library(packs.html[i], character.only = TRUE)}
knitr::opts_chunk$set(echo = TRUE)
source(paste("C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/p00_initialize.r", sep = ""))
## load packages
packs.html <- c("knitr", "pander", "reporttools", "dplyr", "readxl", "countrycode")
for (i in 1:length(packs.html)){library(packs.html[i], character.only = TRUE)}
knitr::opts_chunk$set(echo = TRUE)
source(paste("C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/p00_initialize.r", sep = ""))
## load packages
packs.html <- c("knitr", "pander", "reporttools", "dplyr", "readxl", "countrycode")
for (i in 1:length(packs.html)){library(packs.html[i], character.only = TRUE)}
knitr::opts_chunk$set(echo = TRUE)
source(paste("C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/p00_initialize.r", sep = ""))
with(filter(reg2, type %in% c("HTA", "Regulator")[2]))
## load packages
packs.html <- c("knitr", "pander", "reporttools", "dplyr", "readxl", "countrycode")
for (i in 1:length(packs.html)){library(packs.html[i], character.only = TRUE)}
knitr::opts_chunk$set(echo = TRUE)
source(paste("C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/p00_initialize.r", sep = ""))
# categories with frequencies below cut will be lumped together
cut <- 3
now <- as.POSIXlt(Sys.time())
now <- paste(substr(now, 1, 10), " at ", substr(now, 12, 19), sep = "")
t2 <- with(reg2, table(type))
t2 <- prepTable(t2 = t2, cut = cut)
par(las = 1, mar = c(4.5, 4.5, 3, 1))
ylim <- c(0, 1.1 * max(t2))
xx <- barplot(t2, ylab = "number of registrations", main = paste("Total number of registrations: ", dim(reg)[1], "\n type of institution", sep = ""), col = 2, ylim = ylim)
text(x = xx, y = t2, label = paste(t2, " (", round(100 * t2 / sum(t2)), "%)", sep = ""), pos = 3, cex = 0.8, col = 1)
t2 <- with(reg2, table(background))
t2 <- prepTable(t2 = t2, cut = cut)
par(las = 1, mar = c(4.5, 4.5, 3, 1))
ylim <- c(0, 1.1 * max(t2))
xx <- barplot(t2, ylab = "number of registrations", main = paste("Total number of registrations: ", dim(reg)[1], "\n background", sep = ""), col = 2, ylim = ylim)
text(x = xx, y = t2, label = paste(t2, " (", round(100 * t2 / sum(t2)), "%)", sep = ""), pos = 3, cex = 0.8, col = 1)
t2 <- with(reg2, table(inst2))
t2 <- prepTable(t2 = t2, cut = cut)
par(las = 2, mar = c(21, 4.5, 3, 1))
ylim <- c(0, 1.4 * max(t2))
xx <- barplot(t2, ylab = "number of registrations", main = paste("Total number of registrations: ", dim(reg2)[1], "\n institution", sep = ""), col = 4, ylim = ylim)
text(x = xx, y = t2, label = paste(t2, " (", round(100 * t2 / sum(t2)), "%)", sep = ""), pos = 3, offset = 2, cex = 0.8, col = 1, srt = 90)
#dat <- with(filter(reg2, type %in% c("HTA", "Regulator")[2]))
#dat <- with(filter(reg2, type %in% c("HTA", "Regulator")[1]), table(inst2, mode))
t2 <- with(reg2, table(country2))
t2 <- prepTable(t2 = t2, cut = cut)
par(las = 2, mar = c(17, 4.5, 3, 1))
ylim <- c(0, 1.4 * max(t2))
xx <- barplot(t2, ylab = "number of registrations", main = paste(dim(reg2)[1], " registrations from ", with(reg2, length(unique(country2))), " countries", sep = ""), col = 4, ylim = ylim)
#par(srt = 90)
text(x = xx + 0.2, y = t2 + 2.5, label = paste(t2, " (", round(100 * t2 / sum(t2)), "%)", sep = ""), pos = 3, offset = 2, cex = 0.8, col = 1, srt = 90)
world <- ne_countries(scale = "medium", returnclass = "sf")
uc <- unique(reg2$country2)
uc <- uc[is.na(uc) == FALSE]
world$fill <- (world$sovereignt %in% uc) == FALSE
palette = colorRampPalette(brewer.pal(n=5, name='Oranges'))(5)
palette = c("white", palette)
worldpopmap <- ggplot() +
geom_sf(data = world, aes(fill = fill)) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none") +
ggtitle("Broad representation") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title=element_text(size=30,face="bold"))
# display map
worldpopmap
df <- data.frame(country = reg2$country2)
df$continent <- countrycode(sourcevar = df[, "country"],
origin = "country.name",
destination = "continent")
t2 <- with(df, table(continent))
t2 <- prepTable(t2 = t2, cut = 0)
par(las = 2, mar = c(17, 4.5, 3, 1))
ylim <- c(0, 1.4 * max(t2))
xx <- barplot(t2, ylab = "number of registrations", main = paste(dim(reg2)[1], " registrations from ", with(df, length(unique(continent))), " regions", sep = ""), col = 4, ylim = ylim)
#par(srt = 90)
text(x = xx + 0.2, y = t2 + 2.5, label = paste(t2, " (", round(100 * t2 / sum(t2)), "%)", sep = ""), pos = 3, offset = 2, cex = 0.8, col = 1, srt = 90)
## load packages
packs.html <- c("knitr", "pander", "reporttools", "dplyr", "readxl", "countrycode")
for (i in 1:length(packs.html)){library(packs.html[i], character.only = TRUE)}
knitr::opts_chunk$set(echo = TRUE)
source(paste("C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/p00_initialize.r", sep = ""))
# categories with frequencies below cut will be lumped together
cut <- 3
now <- as.POSIXlt(Sys.time())
now <- paste(substr(now, 1, 10), " at ", substr(now, 12, 19), sep = "")
t2 <- with(reg2, table(type))
t2 <- prepTable(t2 = t2, cut = cut)
par(las = 1, mar = c(4.5, 4.5, 3, 1))
ylim <- c(0, 1.1 * max(t2))
xx <- barplot(t2, ylab = "number of registrations", main = paste("Total number of registrations: ", dim(reg)[1], "\n type of institution", sep = ""), col = 2, ylim = ylim)
text(x = xx, y = t2, label = paste(t2, " (", round(100 * t2 / sum(t2)), "%)", sep = ""), pos = 3, cex = 0.8, col = 1)
t2 <- with(reg2, table(background))
t2 <- prepTable(t2 = t2, cut = cut)
par(las = 1, mar = c(4.5, 4.5, 3, 1))
ylim <- c(0, 1.1 * max(t2))
xx <- barplot(t2, ylab = "number of registrations", main = paste("Total number of registrations: ", dim(reg)[1], "\n background", sep = ""), col = 2, ylim = ylim)
text(x = xx, y = t2, label = paste(t2, " (", round(100 * t2 / sum(t2)), "%)", sep = ""), pos = 3, cex = 0.8, col = 1)
t2 <- with(reg2, table(inst2))
t2 <- prepTable(t2 = t2, cut = cut)
par(las = 2, mar = c(21, 4.5, 3, 1))
ylim <- c(0, 1.4 * max(t2))
xx <- barplot(t2, ylab = "number of registrations", main = paste("Total number of registrations: ", dim(reg2)[1], "\n institution", sep = ""), col = 4, ylim = ylim)
text(x = xx, y = t2, label = paste(t2, " (", round(100 * t2 / sum(t2)), "%)", sep = ""), pos = 3, offset = 2, cex = 0.8, col = 1, srt = 90)
#dat <- with(filter(reg2, type %in% c("HTA", "Regulator")[2]))
#dat <- with(filter(reg2, type %in% c("HTA", "Regulator")[1]), table(inst2, mode))
t2 <- with(reg2, table(country2))
t2 <- prepTable(t2 = t2, cut = cut)
par(las = 2, mar = c(17, 4.5, 3, 1))
ylim <- c(0, 1.4 * max(t2))
xx <- barplot(t2, ylab = "number of registrations", main = paste(dim(reg2)[1], " registrations from ", with(reg2, length(unique(country2))), " countries", sep = ""), col = 4, ylim = ylim)
#par(srt = 90)
text(x = xx + 0.2, y = t2 + 2.5, label = paste(t2, " (", round(100 * t2 / sum(t2)), "%)", sep = ""), pos = 3, offset = 2, cex = 0.8, col = 1, srt = 90)
world <- ne_countries(scale = "medium", returnclass = "sf")
uc <- unique(reg2$country2)
uc <- uc[is.na(uc) == FALSE]
world$fill <- (world$sovereignt %in% uc) == FALSE
palette = colorRampPalette(brewer.pal(n=5, name='Oranges'))(5)
palette = c("white", palette)
worldpopmap <- ggplot() +
geom_sf(data = world, aes(fill = fill)) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none") +
ggtitle("Broad representation") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title=element_text(size=30,face="bold"))
# display map
worldpopmap
df <- data.frame(country = reg2$country2)
df$continent <- countrycode(sourcevar = df[, "country"],
origin = "country.name",
destination = "continent")
t2 <- with(df, table(continent))
t2 <- prepTable(t2 = t2, cut = 0)
par(las = 2, mar = c(17, 4.5, 3, 1))
ylim <- c(0, 1.4 * max(t2))
xx <- barplot(t2, ylab = "number of registrations", main = paste(dim(reg2)[1], " registrations from ", with(df, length(unique(continent))), " regions", sep = ""), col = 4, ylim = ylim)
#par(srt = 90)
text(x = xx + 0.2, y = t2 + 2.5, label = paste(t2, " (", round(100 * t2 / sum(t2)), "%)", sep = ""), pos = 3, offset = 2, cex = 0.8, col = 1, srt = 90)
with(filter(reg2, type %in% c("HTA", "Regulator")[2]))
reg2
reg2$type
filter(reg2, type %in% c("HTA", "Regulator")[2]
)
dat <- with(filter(reg2, type %in% c("HTA", "Regulator")[1]), table(inst2, mode))
dat <- with(filter(reg2, type %in% c("HTA", "Regulator")[1]))
dat
filter(reg2, type %in% c("HTA", "Regulator")[1]
)
dat <- filter(reg2, type %in% c("HTA", "Regulator")[1])
dat
dat <- filter(reg2, type %in% c("HTA", "Regulator")[1])
t2 <- with(dat, table(inst2))
t2 <- prepTable(t2 = t2, cut = cut)
par(las = 2, mar = c(21, 4.5, 3, 1))
ylim <- c(0, 1.4 * max(t2))
xx <- barplot(t2, ylab = "number of registrations", main = paste("Total number of registrations: ", dim(reg2)[1], "\n institution", sep = ""), col = 4, ylim = ylim)
text(x = xx, y = t2, label = paste(t2, " (", round(100 * t2 / sum(t2)), "%)", sep = ""), pos = 3, offset = 2, cex = 0.8, col = 1, srt = 90)
packs.html <- c("knitr", "pander", "reporttools", "dplyr", "readxl", "countrycode")
for (i in 1:length(packs.html)){library(packs.html[i], character.only = TRUE)}
knitr::opts_chunk$set(echo = TRUE)
source(paste("C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/p00_initialize.r", sep = ""))
packs.html <- c("knitr", "pander", "reporttools", "dplyr", "readxl", "countrycode")
for (i in 1:length(packs.html)){library(packs.html[i], character.only = TRUE)}
knitr::opts_chunk$set(echo = TRUE)
source(paste("C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/p00_initialize.r", sep = ""))
## load packages
packs.html <- c("knitr", "pander", "reporttools", "dplyr", "readxl", "countrycode")
for (i in 1:length(packs.html)){library(packs.html[i], character.only = TRUE)}
knitr::opts_chunk$set(echo = TRUE)
source(paste("C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/p00_initialize.r", sep = ""))
dat <- with(filter(reg2, type %in% c("HTA", "Regulator")[2]))
dat
## load packages
packs.html <- c("knitr", "pander", "reporttools", "dplyr", "readxl", "countrycode")
for (i in 1:length(packs.html)){library(packs.html[i], character.only = TRUE)}
knitr::opts_chunk$set(echo = TRUE)
source(paste("C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/p00_initialize.r", sep = ""))
# categories with frequencies below cut will be lumped together
cut <- 3
now <- as.POSIXlt(Sys.time())
now <- paste(substr(now, 1, 10), " at ", substr(now, 12, 19), sep = "")
t2 <- with(reg2, table(type))
t2 <- prepTable(t2 = t2, cut = cut)
par(las = 1, mar = c(4.5, 4.5, 3, 1))
ylim <- c(0, 1.1 * max(t2))
xx <- barplot(t2, ylab = "number of registrations", main = paste("Total number of registrations: ", dim(reg)[1], "\n type of institution", sep = ""), col = 2, ylim = ylim)
text(x = xx, y = t2, label = paste(t2, " (", round(100 * t2 / sum(t2)), "%)", sep = ""), pos = 3, cex = 0.8, col = 1)
t2 <- with(reg2, table(background))
t2 <- prepTable(t2 = t2, cut = cut)
par(las = 1, mar = c(4.5, 4.5, 3, 1))
ylim <- c(0, 1.1 * max(t2))
xx <- barplot(t2, ylab = "number of registrations", main = paste("Total number of registrations: ", dim(reg)[1], "\n background", sep = ""), col = 2, ylim = ylim)
text(x = xx, y = t2, label = paste(t2, " (", round(100 * t2 / sum(t2)), "%)", sep = ""), pos = 3, cex = 0.8, col = 1)
t2 <- with(reg2, table(inst2))
t2 <- prepTable(t2 = t2, cut = cut)
par(las = 2, mar = c(21, 4.5, 3, 1))
ylim <- c(0, 1.4 * max(t2))
xx <- barplot(t2, ylab = "number of registrations", main = paste("Total number of registrations: ", dim(reg2)[1], "\n institution", sep = ""), col = 4, ylim = ylim)
text(x = xx, y = t2, label = paste(t2, " (", round(100 * t2 / sum(t2)), "%)", sep = ""), pos = 3, offset = 2, cex = 0.8, col = 1, srt = 90)
#dat <- with(filter(reg2, type %in% c("HTA", "Regulator")[2]))
dat <- filter(reg2, type %in% c("HTA", "Regulator")[1])
t2 <- with(dat, table(inst2))
t2 <- prepTable(t2 = t2, cut = cut)
par(las = 2, mar = c(21, 4.5, 3, 1))
ylim <- c(0, 1.4 * max(t2))
xx <- barplot(t2, ylab = "number of registrations", main = paste("Total number of registrations: ", dim(reg2)[1], "\n institution", sep = ""), col = 4, ylim = ylim)
text(x = xx, y = t2, label = paste(t2, " (", round(100 * t2 / sum(t2)), "%)", sep = ""), pos = 3, offset = 2, cex = 0.8, col = 1, srt = 90)
t2 <- with(reg2, table(country2))
t2 <- prepTable(t2 = t2, cut = cut)
par(las = 2, mar = c(17, 4.5, 3, 1))
ylim <- c(0, 1.4 * max(t2))
xx <- barplot(t2, ylab = "number of registrations", main = paste(dim(reg2)[1], " registrations from ", with(reg2, length(unique(country2))), " countries", sep = ""), col = 4, ylim = ylim)
#par(srt = 90)
text(x = xx + 0.2, y = t2 + 2.5, label = paste(t2, " (", round(100 * t2 / sum(t2)), "%)", sep = ""), pos = 3, offset = 2, cex = 0.8, col = 1, srt = 90)
world <- ne_countries(scale = "medium", returnclass = "sf")
uc <- unique(reg2$country2)
uc <- uc[is.na(uc) == FALSE]
world$fill <- (world$sovereignt %in% uc) == FALSE
palette = colorRampPalette(brewer.pal(n=5, name='Oranges'))(5)
palette = c("white", palette)
worldpopmap <- ggplot() +
geom_sf(data = world, aes(fill = fill)) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none") +
ggtitle("Broad representation") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title=element_text(size=30,face="bold"))
# display map
worldpopmap
df <- data.frame(country = reg2$country2)
df$continent <- countrycode(sourcevar = df[, "country"],
origin = "country.name",
destination = "continent")
t2 <- with(df, table(continent))
t2 <- prepTable(t2 = t2, cut = 0)
par(las = 2, mar = c(17, 4.5, 3, 1))
ylim <- c(0, 1.4 * max(t2))
xx <- barplot(t2, ylab = "number of registrations", main = paste(dim(reg2)[1], " registrations from ", with(df, length(unique(continent))), " regions", sep = ""), col = 4, ylim = ylim)
#par(srt = 90)
text(x = xx + 0.2, y = t2 + 2.5, label = paste(t2, " (", round(100 * t2 / sum(t2)), "%)", sep = ""), pos = 3, offset = 2, cex = 0.8, col = 1, srt = 90)
xx <- barplot(t2, ylab = "number of registrations", main = paste(dim(reg2)[1], " registrations from ", with(df, length(unique(continent))), " regions", sep = ""), col = 4, ylim = ylim)
dat <- with(filter(reg2, type %in% c("HTA", "Regulator")[2]))
reg2
dat <- filter(reg2, type %in% c("HTA", "Regulator")[2])
dat
dat <- filter(reg2, type %in% c("HTA", "Regulator")[1])
t2 <- with(dat, table(inst2))
t2 <- prepTable(t2 = t2, cut = cut)
par(las = 2, mar = c(21, 4.5, 3, 1))
ylim <- c(0, 1.4 * max(t2))
xx <- barplot(t2, ylab = "number of registrations", main = paste("Total number of registrations: ", dim(reg2)[1], "\n institution", sep = ""), col = 4, ylim = ylim)
text(x = xx, y = t2, label = paste(t2, " (", round(100 * t2 / sum(t2)), "%)", sep = ""), pos = 3, offset = 2, cex = 0.8, col = 1, srt = 90)
reg2
t1 <- select(filter(reg2, is.na(question) == FALSE, first, last, question))
t1 <- select(filter(reg2, is.na(question) == FALSE), first, last, question)
t1
t1 <- select(filter(reg2, is.na(question) == FALSE), first, last, question)
kable(t1)
## load packages
packs.html <- c("knitr", "pander", "reporttools", "dplyr", "readxl", "countrycode")
for (i in 1:length(packs.html)){library(packs.html[i], character.only = TRUE)}
knitr::opts_chunk$set(echo = TRUE)
source(paste("C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/p00_initialize.r", sep = ""))
# categories with frequencies below cut will be lumped together
cut <- 3
now <- as.POSIXlt(Sys.time())
now <- paste(substr(now, 1, 10), " at ", substr(now, 12, 19), sep = "")
reg2
# --------------------------------------------------------------
# define paths, load packages, load functions
# --------------------------------------------------------------
packs <- c("readxl", "openxlsx", "dplyr", "rnaturalearth", "rnaturalearthdata",
"ggplot2", "RColorBrewer", "filesstrings", "reporttools", "PBSmodelling")
for (i in 1:length(packs)){library(packs[i], character.only = TRUE)}
# folder where you download registration DB to
path.from      <- "C:/Users/M335337/Downloads/"
# files for mapping
path.depot     <- "C:/rufibach/05_Depot/"
path.map       <- paste(path.depot, "mapping/", sep = "")
# code files and data
path0 <- "C:/rufibach/70_Service/BBS/events/20250319_innovation/analysis/"
path <- path0
path.functions <- paste(path, "functions/", sep = "")
path.data      <- paste(path, "data/", sep = "")
## functions
source("C:/rufibach/05_Depot/functions/deleteAux.r", echo = FALSE)
source(paste(path.functions, "prepTable.r", sep = ""), echo = FALSE)
source(paste(path.functions, "isValidEmail.r", sep = ""), echo = FALSE)
# open further files to be run
if (1 == 0){
openFile(fname = paste(path, "p02_block_bookings.r", sep = ""))
openFile(fname = paste(path, "p05_input_data.r", sep = ""))
openFile(fname = paste(path, "p07_prepare_data.r", sep = ""))
openFile(fname = paste(path, "p10_mapping.r", sep = ""))
openFile(fname = paste(path, "p20_changes_in_registration.r", sep = ""))
openFile(fname = paste(path, "p40_export_datasets.r", sep = ""))
}
openFile(fname = paste(path, "p30_emails.r", sep = ""))
# source input files
source(paste(path, "p05_input_data.r", sep = ""), echo = FALSE)
source(paste(path, "p07_prepare_data.r", sep = ""), echo = FALSE)
source(paste(path, "p10_mapping.r", sep = ""), echo = FALSE)
source(paste(path, "p30_emails.r", sep = ""), echo = FALSE)
source(paste(path, "p40_export_datasets.r", sep = ""), echo = FALSE)
# write relevant data to BBS repo
reg3
qs <- select(filter(reg2, is.na(question) == FALSE), first, last, question)
qs
# ====================================================
# newly registered participants
# ====================================================
write.table(paste(newmails[is.na(newmails) == FALSE], collapse = ", "), file = paste(path.data, "emails.txt", sep = ""))
write.csv(tail(newmails, 1), file = paste(path.data, "last.csv", sep = ""))
# shorten reg2 to relevant columns
reg2short <- reg2 %>% select(first, last, email, inst2, background, type, country2) %>% arrange(last, first)
# ====================================================
# all registered regulators
# ====================================================
regs <- reg2short %>% filter(type %in% c("HTA", "Regulator"))
write.xlsx(x = regs, file = paste(path.data, "EFSPI2024_regulators.xlsx", sep = ""))
# ====================================================
# all registrations
# ====================================================
write.xlsx(x = reg2short, file = paste(path.data, "EFSPI2024_all_registered_participants.xlsx", sep = ""))
# ====================================================
# all Novartis registrations
# ====================================================
nov <- reg2short %>% filter(inst2 %in% c("Novartis"))
write.xlsx(x = nov, file = paste(path.data, "EFSPI2024_Novartis.xlsx", sep = ""))
# ====================================================
# all Roche registrations
# ====================================================
roche <- reg2short %>% filter(inst2 %in% c("Roche"))
write.xlsx(x = roche, file = paste(path.data, "EFSPI2024_Roche.xlsx", sep = ""))
# ====================================================
# all Merck KGaA registrations
# ====================================================
merck <- reg2short %>% filter(inst2 %in% c("Merck KGaA"))
write.xlsx(x = merck, file = paste(path.data, "EFSPI2024_Merck.xlsx", sep = ""))
merck
# ====================================================
# for analysis on BBS webpage
# ====================================================
path.bbs <- "C:/rufibach/90_github_repos/BBS/home/upcoming/20250319/"
qs <- select(filter(reg2, is.na(question) == FALSE), first, last, question)
write.xlsx(x = qs, file = paste(path.bbs, "qs.xlsx", sep = ""))
reg3 <- reg2 %>% select(inst2, background, type, country2)
write.xlsx(x = reg3, file = paste(path.bbs, "reg3.xlsx", sep = ""))
head(qs)
packs.html <- c("knitr", "pander", "reporttools", "dplyr", "readxl", "countrycode")
for (i in 1:length(packs.html)){library(packs.html[i], character.only = TRUE)}
knitr::opts_chunk$set(echo = TRUE)
# read in data
qs <- as.data.frame(read_excel("qs.xlsx"), col_types = rep("text", 3))
qs
kable(qs)
head(reg2)
head(reg3)
qs <- as.data.frame(read_excel("qs.xlsx", col_types = rep("text", 3)))
# read in data
qs <- as.data.frame(read_excel("qs.xlsx"), col_types = rep("text", 3))
qs <- as.data.frame(read_excel("qs.xlsx"), col_types = rep("text", 3))
dim(reg)
dim(reg2)
## load packages
packs.html <- c("knitr", "pander", "reporttools", "dplyr", "readxl", "countrycode",
"rnaturalearth", "rnaturalearthdata", "RColorBrewer", "ggplot2")
for (i in 1:length(packs.html)){library(packs.html[i], character.only = TRUE)}
knitr::opts_chunk$set(echo = TRUE)
# read in data
qs <- as.data.frame(read_excel("qs.xlsx"), col_types = rep("text", 3))
reg2 <- as.data.frame(read_excel("reg3.xlsx"), col_types = rep("text", 4))
# function
prepTable <- function(t2, cut = 10, ord = TRUE){
if (ord){t2 <- t(as.matrix(t2[rev(order(t2, rev(names(t2))))]))}
if (min(t2) < cut){
i0 <- min(which(t2 <= cut))
t2[1, i0] <- sum(t2[t2 <= cut])
t2 <- t2[1, 1:i0]
names(t2)[i0] <- "other"
}
return(t2)
}
# categories with frequencies below cut will be lumped together
cut <- 3
now <- as.POSIXlt(Sys.time())
now <- paste(substr(now, 1, 10), " at ", substr(now, 12, 19), sep = "")
t2 <- with(reg2, table(type))
t2 <- prepTable(t2 = t2, cut = cut)
par(las = 1, mar = c(4.5, 4.5, 3, 1))
ylim <- c(0, 1.1 * max(t2))
xx <- barplot(t2, ylab = "number of registrations", main = paste("Total number of registrations: ", dim(reg2)[1], "\n type of institution", sep = ""), col = 2, ylim = ylim)
text(x = xx, y = t2, label = paste(t2, " (", round(100 * t2 / sum(t2)), "%)", sep = ""), pos = 3, cex = 0.8, col = 1)
t2 <- with(reg2, table(background))
t2 <- prepTable(t2 = t2, cut = cut)
par(las = 1, mar = c(4.5, 4.5, 3, 1))
ylim <- c(0, 1.1 * max(t2))
xx <- barplot(t2, ylab = "number of registrations", main = paste("Total number of registrations: ", dim(reg2)[1], "\n background", sep = ""), col = 2, ylim = ylim)
text(x = xx, y = t2, label = paste(t2, " (", round(100 * t2 / sum(t2)), "%)", sep = ""), pos = 3, cex = 0.8, col = 1)
t2 <- with(reg2, table(inst2))
t2 <- prepTable(t2 = t2, cut = cut)
par(las = 2, mar = c(21, 4.5, 3, 1))
ylim <- c(0, 1.4 * max(t2))
xx <- barplot(t2, ylab = "number of registrations", main = paste("Total number of registrations: ", dim(reg2)[1], "\n institution", sep = ""), col = 4, ylim = ylim)
text(x = xx, y = t2, label = paste(t2, " (", round(100 * t2 / sum(t2)), "%)", sep = ""), pos = 3, offset = 2, cex = 0.8, col = 1, srt = 90)
#dat <- filter(reg2, type %in% c("HTA", "Regulator")[2])
dat <- filter(reg2, type %in% c("HTA", "Regulator")[1])
t2 <- with(dat, table(inst2))
t2 <- prepTable(t2 = t2, cut = cut)
par(las = 2, mar = c(21, 4.5, 3, 1))
ylim <- c(0, 1.4 * max(t2))
xx <- barplot(t2, ylab = "number of registrations", main = paste("Total number of registrations: ", dim(reg2)[1], "\n institution", sep = ""), col = 4, ylim = ylim)
text(x = xx, y = t2, label = paste(t2, " (", round(100 * t2 / sum(t2)), "%)", sep = ""), pos = 3, offset = 2, cex = 0.8, col = 1, srt = 90)
t2 <- with(reg2, table(country2))
t2 <- prepTable(t2 = t2, cut = cut)
par(las = 2, mar = c(17, 4.5, 3, 1))
ylim <- c(0, 1.4 * max(t2))
xx <- barplot(t2, ylab = "number of registrations", main = paste(dim(reg2)[1], " registrations from ", with(reg2, length(unique(country2))), " countries", sep = ""), col = 4, ylim = ylim)
#par(srt = 90)
text(x = xx + 0.2, y = t2 + 2.5, label = paste(t2, " (", round(100 * t2 / sum(t2)), "%)", sep = ""), pos = 3, offset = 2, cex = 0.8, col = 1, srt = 90)
world <- ne_countries(scale = "medium", returnclass = "sf")
uc <- unique(reg2$country2)
uc <- uc[is.na(uc) == FALSE]
world$fill <- (world$sovereignt %in% uc) == FALSE
palette = colorRampPalette(brewer.pal(n=5, name='Oranges'))(5)
palette = c("white", palette)
worldpopmap <- ggplot() +
geom_sf(data = world, aes(fill = fill)) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none") +
ggtitle("Broad representation") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title=element_text(size=30,face="bold"))
# display map
worldpopmap
df <- data.frame(country = reg2$country2)
df$continent <- countrycode(sourcevar = df[, "country"],
origin = "country.name",
destination = "continent")
t2 <- with(df, table(continent))
t2 <- prepTable(t2 = t2, cut = 0)
par(las = 2, mar = c(17, 4.5, 3, 1))
ylim <- c(0, 1.4 * max(t2))
xx <- barplot(t2, ylab = "number of registrations", main = paste(dim(reg2)[1], " registrations from ", with(df, length(unique(continent))), " regions", sep = ""), col = 4, ylim = ylim)
#par(srt = 90)
text(x = xx + 0.2, y = t2 + 2.5, label = paste(t2, " (", round(100 * t2 / sum(t2)), "%)", sep = ""), pos = 3, offset = 2, cex = 0.8, col = 1, srt = 90)
kable(qs)
dat <- filter(reg2, type %in% c("HTA", "Regulator")[2])
dat
